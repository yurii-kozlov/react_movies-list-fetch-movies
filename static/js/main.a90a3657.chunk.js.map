{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","description","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","film","setFilm","isError","setIsError","isLoading","setIsLoading","query","setQuery","onSubmit","event","preventDefault","fetch","then","res","json","getMovie","result","Poster","Title","Plot","imdbID","catch","finally","htmlFor","type","id","placeholder","value","onChange","target","disabled","length","onClick","App","setMovies","newMovie","every","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a90a3657.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    description,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\nimport './FindMovie.scss';\nimport className from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [film, setFilm] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const handleTitleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(result => {\n        if ('Error' in result) {\n          setIsError(true);\n          setFilm(null);\n\n          return;\n        }\n\n        const {\n          Poster, Title, Plot, imdbID,\n        } = result;\n\n        setFilm({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster\n            || 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n\n        setIsError(false);\n      })\n      .catch(() => setIsError(true))\n      .finally(\n        () => setIsLoading(false),\n      );\n  };\n\n  const handleClick = () => {\n    if (film) {\n      addMovie(film);\n    }\n\n    setQuery('');\n    setFilm(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={className('button',\n                { 'is-light': !isLoading }, { 'is-loading': isLoading })}\n              disabled={!query.length}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {film && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleClick}\n              >\n                Add to the list\n              </button>\n            )}\n\n          </div>\n        </div>\n      </form>\n\n      {film && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={film} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=703e7288';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json());\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbId !== newMovie.imdbId)) {\n      setMovies(state => [...state, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}